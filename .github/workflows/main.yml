name: CI
on: [push, pull_request]

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build: [stable, beta, nightly, macos]
        include:
          - build: stable
            os: ubuntu-latest
            rust: stable
          - build: beta
            os: ubuntu-latest
            rust: beta
          - build: nightly
            os: ubuntu-latest
            rust: nightly
          - build: macos
            os: macos-latest
            rust: stable
    steps:
    - uses: actions/checkout@master
    - name: Install Rust (rustup)
      run: rustup update ${{ matrix.rust }} --no-self-update && rustup default ${{ matrix.rust }}
      shell: bash
    - run: echo "${{matrix.os}}"
    - name: Install brotli
      run: |
         echo "$RUNNER_OS"
         if [ "$RUNNER_OS" == "Linux" ]; then
              sudo apt install libbrotli1 libbrotli-dev
         elif [ "$RUNNER_OS" == "macOS" ]; then
              brew install brotli
         else
              echo "$RUNNER_OS not supported"
              exit 1
         fi
    - run: cargo test
    - run: cargo run --example all-read-write-roundtrips --release
    - run: cargo run --manifest-path systest/Cargo.toml

  rustfmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Install Rust
      run: rustup update stable && rustup default stable && rustup component add rustfmt
    - run: cargo fmt -- --check

  systest:
    name: Systest
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Install Rust
      run: rustup update stable && rustup default stable
    - name: Install brotli
      run: |
         echo "$RUNNER_OS"
         if [ "$RUNNER_OS" == "Linux" ]; then
              sudo apt install libbrotli1 libbrotli-dev
         elif [ "$RUNNER_OS" == "macOS" ]; then
              brew install brotli
         else
              echo "$RUNNER_OS not supported"
         fi
    - run: cargo run --manifest-path systest/Cargo.toml

  publish_docs:
    name: Publish Documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Install Rust
        run: rustup update stable && rustup default stable
      - run: cargo doc --no-deps --all-features
      - run: cargo doc --no-deps --all-features --manifest-path brotli-sys/Cargo.toml
      - name: Publish documentation
        run: |
          cd target/doc
          git init
          git add .
          git -c user.name='ci' -c user.email='ci' commit -m init
          git push -f -q https://git:${{ secrets.github_token }}@github.com/${{ github.repository }} HEAD:gh-pages
        if: github.event_name == 'push' && github.event.ref == 'refs/heads/master'
